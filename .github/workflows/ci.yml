name: CI

on:
  push:
    branches:
      - master
    tags:
      - v*
  pull_request:
    branches:
      - master

jobs:
  lint-check:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.6
        uses: actions/setup-python@v2
        with:
          python-version: 3.6

      - name: Install dependencies
        run: |
          python -m pip install -e .[tests,tensorflow-cpu]

      - name: Check code format with Black
        run: |
          black --check .

      - name: Check code style with Flake8
        if: ${{ always() }}
        run: |
          flake8 .


  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tensorflow: [2.3, 2.4]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.6
        uses: actions/setup-python@v2
        with:
          python-version: 3.6

      - name: Install dependencies
        run: |
          python -m pip install tensorflow-cpu==${{ matrix.tensorflow }}.*
          python -m pip install -e .[tests]

      - name: Download test data
        run: |
          wget https://s3.amazonaws.com/opennmt-models/transliteration-aren-v2.tar.gz
          mkdir -p testdata
          tar xf transliteration-aren-v2.tar.gz -C testdata
          wget -P testdata https://opennmt-trainingdata.s3.amazonaws.com/wmtende.model

      - name: Run tests
        run: |
          pytest --cov=opennmt --cov-report xml opennmt/tests

      - name: Upload coverage report
        if: matrix.tensorflow == '2.4'
        run: |
          bash <(curl -s https://codecov.io/bash)


  build-and-deploy-package:
    runs-on: ubuntu-latest
    needs: [lint-check, test]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.6
        uses: actions/setup-python@v2
        with:
          python-version: 3.6

      - name: Install dependencies
        run: |
          python -m pip install wheel

      - name: Build package
        run: |
          python setup.py sdist bdist_wheel

      - name: Push package on PyPI
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: ${{ secrets.PYPI_USERNAME }}
          password: ${{ secrets.PYPI_PASSWORD }}


  build-and-deploy-docs:
    runs-on: ubuntu-latest
    needs: [lint-check, test]

    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Set up Python 3.6
        uses: actions/setup-python@v2
        with:
          python-version: 3.6

      - name: Install dependencies
        run: |
          python -m pip install -e .[tensorflow-cpu]
          python -m pip install -r docs/requirements.txt

      - name: Build docs
        run: |
          python docs/generate-apidoc.py docs/package
          sphinx-build docs docs/build

      - name: Deploy docs
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: JamesIves/github-pages-deploy-action@3.7.1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: docs/build
          CLEAN: true
